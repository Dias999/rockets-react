import { ReactNode, PropsWithChildren } from 'react';
import { StyledDrawerProps } from './Styles';
import { DrawerItemProps } from './DrawerItem';
import { TextProps } from '../../interfaces';
import { SxProps, Theme } from '@mui/material/styles';
export type DrawerProps = {
    items?: DrawerItemProps[];
    currentId?: string;
    customToggle?: (toggleDrawer: () => void, collapsed?: boolean) => ReactNode;
    mobileIsOpen?: boolean;
    onMobileClose?: () => void;
    logo?: string | ReactNode | ((collapsed?: boolean) => ReactNode);
    textProps?: TextProps;
    sx?: StyledDrawerProps['sx'];
    buttonSx?: SxProps<Theme>;
    horizontal?: boolean;
    collapsible?: boolean;
    collapsibleIcon?: ReactNode | ((collapsed?: boolean) => ReactNode);
    collapsibleIconColor?: string;
    collapsibleIconBgColor?: string;
    collapsed?: boolean;
    onCollapsedChange?: (collapsed: boolean) => void;
    backgroundColor?: StyledDrawerProps['backgroundColor'];
    iconColor?: DrawerItemProps['iconColor'];
    activeIconColor?: DrawerItemProps['activeIconColor'];
    collapsedWidth?: StyledDrawerProps['collapsedWidth'];
    expandedWidth?: StyledDrawerProps['expandedWidth'];
};
export declare const Drawer: (props: PropsWithChildren<DrawerProps>) => JSX.Element;
